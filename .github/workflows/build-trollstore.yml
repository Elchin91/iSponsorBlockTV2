name: Build TrollStore IPA

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Make scripts executable
        run: |
          chmod +x create_project.sh
          chmod +x create_entitlements.sh
        
      - name: Explore repository structure
        run: |
          echo "Current directory:"
          pwd
          echo -e "\nRoot directory contents:"
          ls -la
          echo -e "\nSearch for Xcode project files (deep):"
          find . -name "*.xcodeproj" | sort
          echo -e "\nSearch for Xcode workspace files (deep):"
          find . -name "*.xcworkspace" | sort
          echo -e "\nDirectory structure (2 levels):"
          find . -type d -maxdepth 2 | sort
          echo -e "\nCheck iSponsorBlockTV directory contents:"
          ls -la iSponsorBlockTV/ || echo "Directory not found"

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Create basic Xcode project if not found
        run: |
          # Проверяем есть ли Xcode проект
          if [ ! -d "./iSponsorBlockTV.xcodeproj" ] && [ ! -d "./iSponsorBlockTV/iSponsorBlockTV.xcodeproj" ]; then
            echo "Создаем базовый Xcode проект..."
            ./create_project.sh
            echo "Базовый Xcode проект создан успешно"
          else
            echo "Xcode проект уже существует"
          fi

      - name: Create entitlements file
        run: |
          # Используем существующие entitlements или создаем новые
          if [ -f "iSponsorBlockTV/TrollStore.entitlements" ]; then
            echo "Используем существующий файл entitlements"
          else
            echo "Создаем файл entitlements"
            ./create_entitlements.sh
          fi
          
      - name: Build TrollStore IPA
        run: |
          # Определяем путь к проекту
          if [ -d "./iSponsorBlockTV.xcodeproj" ]; then
            PROJECT_PATH="./iSponsorBlockTV.xcodeproj"
          elif [ -d "./iSponsorBlockTV/iSponsorBlockTV.xcodeproj" ]; then
            PROJECT_PATH="./iSponsorBlockTV/iSponsorBlockTV.xcodeproj"
          else
            echo "Ошибка: Не удается найти Xcode проект"
            exit 1
          fi
          
          SCHEME_NAME="iSponsorBlockTV"
          
          echo "Используем проект: $PROJECT_PATH"
          echo "Используем схему: $SCHEME_NAME"
          
          # Показываем доступные схемы
          xcodebuild -project "$PROJECT_PATH" -list || echo "Не удается получить список схем"
          
          # Создаем папку для сборки
          mkdir -p build
          
          # Сборка архива
          echo "Начинаем сборку архива..."
          xcodebuild clean archive \
            -project "$PROJECT_PATH" \
            -scheme "$SCHEME_NAME" \
            -configuration Release \
            -sdk iphoneos \
            -archivePath build/app.xcarchive \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO \
            CODE_SIGN_IDENTITY="" \
            ENTITLEMENTS_REQUIRED=YES \
            EXPANDED_CODE_SIGN_IDENTITY="" \
            STRIP_SWIFT_SYMBOLS=NO \
            COPY_PHASE_STRIP=NO \
            SWIFT_OPTIMIZATION_LEVEL="-O" \
            OTHER_CODE_SIGN_FLAGS="--entitlements iSponsorBlockTV/TrollStore.entitlements" \
            | tee build.log
            
          # Проверяем результат сборки
          if [ ${PIPESTATUS[0]} -ne 0 ]; then
            echo "Ошибка сборки. Лог:"
            cat build.log
            exit 1
          fi
            
      - name: Create IPA
        run: |
          if [ -d "build/app.xcarchive/Products/Applications" ]; then
            echo "Архив создан успешно. Создаем IPA..."
            mkdir -p Payload
            cp -r build/app.xcarchive/Products/Applications/*.app Payload/
            zip -r iSponsorBlockTV-TrollStore.ipa Payload
            echo "IPA создан в: iSponsorBlockTV-TrollStore.ipa"
            ls -la iSponsorBlockTV-TrollStore.ipa
          else
            echo "Архив не создан. Не удается создать IPA."
            echo "Содержимое папки build:"
            find build -type f | head -20
            exit 1
          fi

      - name: Upload IPA as artifact
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          tag_name: trollstore-ipa-${{ github.run_number }}
          name: TrollStore IPA Build ${{ github.run_number }}
          draft: false
          prerelease: false
          files: iSponsorBlockTV-TrollStore.ipa
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
